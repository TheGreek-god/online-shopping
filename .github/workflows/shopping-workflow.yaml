name: Deploy Microservices

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Increase the timeout as needed

    strategy:
      matrix:
        service: 
          - adservice
          - cartservice
          - checkoutservice
          - currencyservice
          - emailservice
          - frontend
          - loadgenerator
          - paymentservice
          - productcatalogservice
          - recommendationservice
          - shippingservice

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          if [ "${{ matrix.service }}" = "cartservice" ]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest -f ./src/cartservice/src/Dockerfile ./src/cartservice/src
            docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest
          else
            docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest -f ./src/${{ matrix.service }}/Dockerfile ./src/${{ matrix.service }}
            docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest
          fi

    #  - name: Start Minikube
    #    run: |
    #    minikube start --driver=docker

    #  - name: Set up kubectl
    #    uses: azure/setup-kubectl@v1
    #    with:
          version: 'latest'

    #  - name: Use Minikube context
    #    run: |
    #     kubectl config use-context minikube

    #  - name: Deploy to Kubernetes
    #    run: |
    #     kubectl apply -f ./release/kubernetes-manifests.yaml

    #  - name: Get pods
    #    run: |
    #      kubectl get pods

    #  - name: Get all resources across all namespaces
    #    run: |
    #      kubectl get all --all-namespaces
          
